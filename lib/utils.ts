import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

import type { MimeTypes } from "@/types/types";
import { type FileType } from "@/db/schema";

export const APP_NAME = process.env.APP_NAME;
export const APP_NAME_CLIENT = process.env.NEXT_PUBLIC_APP_NAME;
export const APP_MODE = process.env.APP_MODE;
export const APP_MODE_CLIENT = process.env.NEXT_PUBLIC_APP_MODE;

export const DESCRIPTION = "Generated by create next app";
export const INFINITY_QUERY = 10;
export const PAGE_SIZE = 15;

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export function absURL(href?: string) {
  if (typeof window !== "undefined") return "";
  if (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}` + href;
  return `http://localhost:${process.env.PORT ?? 3000}` + href;
}

export const fileTypeToMimeType = (type: FileType) => {
  switch (type) {
    case "JSON":
      return "application/json";
    case "CSV":
      return "text/csv";
  }
};

export const mimeTypeToFileType = (type: MimeTypes) => {
  switch (type) {
    case "application/json":
      return "JSON";
    case "text/csv":
      return "CSV";
  }
};
